name: Labeler

on: [pull_request]

jobs:
  add-label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Add label based on modified paths
      uses: actions/labeler@v4
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        sync-labels: true

    - name: Get config data
      id: config
      run: |
        echo "::set-env name=LABELS::$(cat .github/labels_config.txt | awk '{print $1}')"
        echo "::set-env name=BRANCH_FORMATS::$(cat .github/labels_config.txt | awk '{print $2}')"

    - name: Add label based on branch or PR title
      id: add_label
      run: |
        LABELS=(${{ env.LABELS }})
        BRANCH_FORMATS=(${{ env.BRANCH_FORMATS }})
        for i in "${!LABELS[@]}"; do
          if [[ "${{ github.event.pull_request.head.ref }}" == "${BRANCH_FORMATS[$i]}*" ]] ||
              [[ "$(echo "${{ github.event.pull_request.title }}" | tr '[:upper:]' '[:lower:]')" == *"$(echo "${LABELS[$i]}" | tr '[:upper:]' '[:lower:]')"* ]]; then
            echo "${LABELS[$i]}"
            exit 0
          fi
        done
        exit 1

    - name: Add label to PR
      if: steps.add_label.outputs.exit_code == 0
      uses: actions/github-script@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          const label = steps.add_label.outputs.stdout.trim()
          github.issues.addLabels({ issue_number: context.issue.number, labels: [label] })
