name: Labeler

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  add-label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.x

    - name: Install dependencies
      run: |
        pip install requests

    - name: Add label based on modified paths
      uses: actions/labeler@v4
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        sync-labels: true

    - name: Find suitable labels for PR
      if: github.event.pull_request
      id: add_labels
      run: |
        echo "BRANCH_NAME=$(echo "${{ github.ref  }}" | sed "s/refs\/heads\///")" >> $GITHUB_ENV
        echo "PR_TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
        python .github/add_labels.py
        echo "LABELS=$(cat labels.txt | awk '{printf "%s\\n", $0}')" >> $GITHUB_ENV
        exit_code=$?

    - name: Add label based on branch or PR title
      if: steps.add_labels.outputs.exit_code == 0 && github.event.pull_request
      uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: ${{ env.LABELS }}

    - name: Add labels for issues
      if: steps.add_labels.outputs.exit_code == 0 && github.event.issue
      uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: |
          ${{
            if contains(toJson(github.event.issue.title), 'bug') ||
               contains(toJson(github.event.issue.body), 'bug')
            then 'bug,'
            else ''
          }}
          ${{
            if contains(toJson(github.event.issue.title), 'enhancement') ||
               contains(toJson(github.event.issue.body), 'enhancement')
            then 'enhancement,'
            else ''
          }}
          ${{
            if contains(toJson(github.event.issue.title), 'question') ||
               contains(toJson(github.event.issue.body), 'question')
            then 'question'
            else ''
          }}
